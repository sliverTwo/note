## rootLogger配置
log4j.rootLogger=DEBUG, stdout, file, mail

## 标准输出日志，主要用于console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%l - %m%n

## 文件输出日志
log4j.appender.file=org.apache.log4j.RollingFileAppender
#文件路径,${web-root}指定web站点项目根路径
log4j.appender.file.File=${web-root}/logs/myapp.log
log4j.appender.file.Threshold = INFO
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%l - %m%n

# 按日志输出文件
log4j.appender.DailyRollingFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.DailyRollingFile.Threshold = INFO
log4j.appender.DailyRollingFile.File = E:\\log\\iipmes\\iipmes_daily.log
log4j.appender.DailyRollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.DailyRollingFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n

#按大小输出文件
log4j.appender.RollingFile = org.apache.log4j.RollingFileAppender
log4j.appender.RollingFile.File = E:\\log\\iipmes\\warn.log
log4j.appender.RollingFile.Threshold = WARN
log4j.appender.RollingFile.MaxFileSize=5MB
log4j.appender.RollingFile.MaxBackupIndex=5
log4j.appender.RollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n

## 邮件输出日志
log4j.appender.mail=org.apache.log4j.net.SMTPAppender
## 仅支持ERROR及以上的日志
log4j.appender.mail.Threshold=ERROR
#缓存文件大小，日志达到设定值时出发发送，单位为k
log4j.appender.mail.BufferSize=0
#设置smtp服务器
log4j.appender.mail.SMTPHost=smtp.163.com
#设置smtp服务器端口
#log4j.appender.mail.SMTPPort=465
#设置smpt协议,smtps或者不设置
#log4j.appender.mail.SMTPProtocol=smtps
#设置用户名
log4j.appender.mail.SMTPUsername=testemail@163.com
#设置密码
log4j.appender.mail.SMTPPassword=123456
#设置发送者
log4j.appender.mail.From=testemail@163.com
#设置接收者，以","隔开
log4j.appender.mail.To=testemail@163.com
#设置副本(Carbon Copy)抄送者，以","隔开
log4j.appender.mail.Cc=testemail@163.com,hwj@163.com
#设置密件(Blind Carbon Copy)抄送者，以","隔开
log4j.appender.mail.Bcc=testemail@163.com,hwj@163.com
#设置邮件标题
log4j.appender.mail.Subject=ErrorMessage
#设置日志布局
log4j.appender.mail.layout=org.apache.log4j.PatternLayout
#设置自定义格式
log4j.appender.mail.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%l - %m%n
 
## 关闭某些日志
log4j.logger.org.springframework=OFF
log4j.logger.com.alibaba=OFF
log4j.logger.org.apache.zookeeper=OFF
log4j.logger.org.I0Itec.zkclient=OFF

附：Pattern参数的格式含义
%c 输出日志信息所属的类的全名
%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2013-8-19- 22：10：28
%f 输出日志信息所属的类的类名
%l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
%m 输出代码中指定的信息，如log(message)中的message
%n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n”
%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
%r 输出自应用启动到输出该日志信息所耗费的毫秒数
%t 输出产生该日志事件的线程名

